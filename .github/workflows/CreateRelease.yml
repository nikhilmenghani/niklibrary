name: Create Release

on:
  push:
    branches:
      - main
    paths:
      - 'NikGapps/helper/assets/changelogs.yaml'
      - 'script.sh'
      - 'Dockerfile'
      - 'setup.py'
      - 'trigger release'
      - 'NikGapps/copy_repos.py'
      - 'NikGapps/cache.py'
  workflow_dispatch:

jobs:
  auto-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Fetch the latest release version
        id: latest_version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .name)
          echo "LATEST_VERSION=$LATEST_VERSION"
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Increment the version
        id: increment_version
        run: |
          LATEST_VERSION=$(echo $LATEST_VERSION | sed 's/v//') # Remove 'v' if present
          IFS='.' read -r V_MAJOR V_MINOR V_PATCH <<< "$LATEST_VERSION"
          if [[ $V_MINOR -eq 99 ]]; then
            V_MAJOR=$((V_MAJOR + 1))
            V_MINOR=0
          else
            V_MINOR=$((V_MINOR + 1))
          fi
          NEW_VERSION="$V_MAJOR.$V_MINOR"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.AUTH }}
        with:
          tag_name: v${{ steps.increment_version.outputs.new_version }}
          release_name: ${{ steps.increment_version.outputs.new_version }}
          draft: false
          prerelease: false
